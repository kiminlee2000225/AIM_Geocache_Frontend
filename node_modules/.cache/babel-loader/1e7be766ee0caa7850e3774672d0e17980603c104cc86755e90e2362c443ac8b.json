{"ast":null,"code":"var _jsxFileName = \"/Users/kiminlee2000225/Documents/Code/geocache_frontend/src/GoogleMaps.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker, InfoWindow } from '@react-google-maps/api';\nimport axios from 'axios';\nimport Button from '@mui/material/Button';\nimport './GoogleMaps.css';\n\n/**\n * Style for the Google Maps API component.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100vh'\n};\nfunction MapComponent() {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: 'AIzaSyCuqNmuK8YHJn06WZwIkzZd2J8_XTJxpxM'\n  });\n  const [position, setPosition] = useState({\n    lat: 0,\n    lng: 0\n  });\n  const mapRef = React.useRef(null);\n  const [waypoints, setWayPoints] = React.useState([]);\n  const [foundWaypoints, setfoundWaypoints] = React.useState([]);\n  const [currPositionClicked, setCurrPositionClicked] = React.useState(false);\n  const [activeMarkerHash, setActiveMarkerHash] = React.useState(null);\n  navigator.geolocation.getCurrentPosition(position => {\n    setPosition({\n      lat: parseFloat(position.coords.latitude),\n      lng: parseFloat(position.coords.longitude)\n    });\n  });\n\n  /**\n   * Makes an API call to get 15 waypoints within the bounding box of the map.\n   */\n  async function getWaypoints(bounds) {\n    let boundaries = {\n      northEastLat: bounds.getNorthEast().lat(),\n      northEastLng: bounds.getNorthEast().lng(),\n      southWestLat: bounds.getSouthWest().lat(),\n      southWestLng: bounds.getSouthWest().lng()\n    };\n    await axios.get(`http://localhost:5000/geocacheWaypoints/${boundaries.northEastLat}\n        /${boundaries.northEastLng}/${boundaries.southWestLat}/${boundaries.southWestLng}`).then(response => {\n      console.log('SUCCESS', response);\n      setWayPoints(response.data.message);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  /**\n   * Makes an API call to get the waypoints that have already been found by the user.\n   */\n  async function getFoundWaypoints() {\n    await axios.get('http://localhost:5000/geocacheFoundWaypoints').then(response => {\n      console.log('SUCCESS', response);\n      setfoundWaypoints(response.data.message);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  /**\n   * Callback function to be called when new tiles/areas on the map has been loaded. Gets the\n   * visible waypoints on the map and waypoints that have already been found by the user.\n   */\n  const onTilesLoaded = React.useCallback(async function callback() {\n    const bounds = mapRef.current.getBounds();\n    await getWaypoints(bounds);\n    await getFoundWaypoints();\n  }, []);\n\n  /**\n   * Callback function to be called when the map is loaded at the beginning. Gets the visible\n   * waypoints on the map and waypoints that have already been found by the user. Creates a\n   * new map component and sets it as a reference.\n   */\n  const onLoad = React.useCallback(async function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds(position);\n    await getWaypoints(bounds);\n    await getFoundWaypoints();\n    map.fitBounds(bounds);\n    mapRef.current = map;\n    map.center = position;\n  }, [position]);\n\n  /**\n   * Callback function to be called when map is unmounted. Sets the hooks to the relevant null\n   * or empty state, including the map reference.\n   */\n  const onUnmount = React.useCallback(function callback() {\n    mapRef.current = null;\n    setWayPoints([]);\n    setCurrPositionClicked(false);\n    setActiveMarkerHash(null);\n  }, []);\n\n  /**\n   * Callback function to be called when the user found the geocache. Makes an API call to\n   * the backend to record the found cache waypoint. Makes an API call to gather the updated\n   * found waypoints by the user.\n   */\n  const onCacheFoundButtonClick = React.useCallback(async function callback(waypoint) {\n    // Replace '/' as '@@' since '/' cannot be used in a REST api.\n    let waypointName = waypoint.name.replace('/', '@@');\n    await axios.post(`http://localhost:5000/geocacheFound/${waypoint.lat}/${waypoint.lng}/'${waypointName}'/${waypoint.hash}`).then(response => {\n      console.log('SUCCESSPOST', response);\n    }).catch(error => {\n      console.log(error);\n    });\n    await getFoundWaypoints();\n  }, []);\n\n  /**\n   * Determines if the given hash for a waypoint exists in the waypoints that have been found\n   * by the user.\n   */\n  function isFoundMarker(hash) {\n    let foundCacheHash = [];\n    foundWaypoints.map(waypoint => foundCacheHash.push(waypoint.hash));\n    return foundCacheHash.includes(hash);\n  }\n\n  /**\n   * Clickable icon for the user's current position.\n   */\n  const currPositionIcon = {\n    path: 'M-1.547 12l6.563-6.609-1.406-1.406-5.156 5.203-2.063-2.109-1.406 1.406zM0 0q2.906 0 ' + '4.945 2.039t2.039 4.945q0 1.453-0.727 3.328t-1.758 3.516-2.039 3.070-1.711 2.273l-0.75 ' + '0.797q-0.281-0.328-0.75-0.867t-1.688-2.156-2.133-3.141-1.664-3.445-0.75-3.375q0-2.906 ' + '2.039-4.945t4.945-2.039z',\n    fillColor: 'green',\n    fillOpacity: 1,\n    strokeWeight: 0,\n    rotation: 0,\n    scale: 2\n  };\n\n  /**\n   * Clickable icon for waypoints that have been found by the user.\n   */\n  let foundWaypointIcon = {\n    url: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png',\n    fillColor: 'red',\n    fillOpacity: 1,\n    strokeWeight: 0,\n    rotation: 0,\n    scale: 1.8\n  };\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    zoom: 4,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    onTilesLoaded: onTilesLoaded,\n    children: [waypoints.map(waypoint => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: waypoint.lat,\n          lng: waypoint.lng\n        },\n        clickable: true,\n        onClick: () => setActiveMarkerHash(waypoint.hash),\n        icon: isFoundMarker(waypoint.hash) ? foundWaypointIcon : null,\n        children: activeMarkerHash && activeMarkerHash === waypoint.hash ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n          onCloseClick: () => setActiveMarkerHash(null),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"markerInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"markerName\",\n              children: waypoint.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Latitude: \", waypoint.lat]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Longitude: \", waypoint.lng]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"markerButton\",\n              variant: \"outlined\",\n              onClick: () => onCacheFoundButtonClick(waypoint),\n              disabled: isFoundMarker(waypoint.hash),\n              children: \"Cache found!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this) : null\n      }, waypoint.hash, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Marker, {\n      position: position,\n      clickable: true,\n      icon: currPositionIcon,\n      onClick: () => setCurrPositionClicked(true),\n      children: currPositionClicked && /*#__PURE__*/_jsxDEV(InfoWindow, {\n        onCloseClick: () => setCurrPositionClicked(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"markerInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Current Location!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Latitude: \", position.lat]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Longitude: \", position.lng]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this)\n    }, 'current_location', false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(MapComponent, \"rYWwAg9Wh6rdpaqgEYZLEhRYBe0=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = MapComponent;\nexport default _c2 = /*#__PURE__*/React.memo(MapComponent);\nvar _c, _c2;\n$RefreshReg$(_c, \"MapComponent\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","GoogleMap","useJsApiLoader","Marker","InfoWindow","axios","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","MapComponent","_s","isLoaded","id","googleMapsApiKey","position","setPosition","lat","lng","mapRef","useRef","waypoints","setWayPoints","foundWaypoints","setfoundWaypoints","currPositionClicked","setCurrPositionClicked","activeMarkerHash","setActiveMarkerHash","navigator","geolocation","getCurrentPosition","parseFloat","coords","latitude","longitude","getWaypoints","bounds","boundaries","northEastLat","getNorthEast","northEastLng","southWestLat","getSouthWest","southWestLng","get","then","response","console","log","data","message","catch","error","getFoundWaypoints","onTilesLoaded","useCallback","callback","current","getBounds","onLoad","map","window","google","maps","LatLngBounds","fitBounds","center","onUnmount","onCacheFoundButtonClick","waypoint","waypointName","name","replace","post","hash","isFoundMarker","foundCacheHash","push","includes","currPositionIcon","path","fillColor","fillOpacity","strokeWeight","rotation","scale","foundWaypointIcon","url","mapContainerStyle","zoom","children","clickable","onClick","icon","onCloseClick","fileName","_jsxFileName","lineNumber","columnNumber","variant","disabled","_c","_c2","memo","$RefreshReg$"],"sources":["/Users/kiminlee2000225/Documents/Code/geocache_frontend/src/GoogleMaps.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  GoogleMap,\n  useJsApiLoader,\n  Marker,\n  InfoWindow\n} from '@react-google-maps/api'\nimport axios from 'axios'\nimport Button from '@mui/material/Button'\nimport './GoogleMaps.css'\n\n/**\n * Style for the Google Maps API component.\n */\nconst containerStyle = {\n  width: '100%',\n  height: '100vh'\n}\n\nfunction MapComponent () {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: 'AIzaSyCuqNmuK8YHJn06WZwIkzZd2J8_XTJxpxM'\n  })\n\n  const [position, setPosition] = useState({ lat: 0, lng: 0 })\n  const mapRef = React.useRef(null)\n  const [waypoints, setWayPoints] = React.useState([])\n  const [foundWaypoints, setfoundWaypoints] = React.useState([])\n  const [currPositionClicked, setCurrPositionClicked] = React.useState(false)\n  const [activeMarkerHash, setActiveMarkerHash] = React.useState(null)\n\n  navigator.geolocation.getCurrentPosition(position => {\n    setPosition({\n      lat: parseFloat(position.coords.latitude),\n      lng: parseFloat(position.coords.longitude)\n    })\n  })\n\n  /**\n   * Makes an API call to get 15 waypoints within the bounding box of the map.\n   */\n  async function getWaypoints (bounds) {\n    let boundaries = {\n      northEastLat: bounds.getNorthEast().lat(),\n      northEastLng: bounds.getNorthEast().lng(),\n      southWestLat: bounds.getSouthWest().lat(),\n      southWestLng: bounds.getSouthWest().lng()\n    }\n\n    await axios\n      .get(\n        `http://localhost:5000/geocacheWaypoints/${boundaries.northEastLat}\n        /${boundaries.northEastLng}/${boundaries.southWestLat}/${boundaries.southWestLng}`\n      )\n      .then(response => {\n        console.log('SUCCESS', response)\n        setWayPoints(response.data.message)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  /**\n   * Makes an API call to get the waypoints that have already been found by the user.\n   */\n  async function getFoundWaypoints () {\n    await axios\n      .get('http://localhost:5000/geocacheFoundWaypoints')\n      .then(response => {\n        console.log('SUCCESS', response)\n        setfoundWaypoints(response.data.message)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  /**\n   * Callback function to be called when new tiles/areas on the map has been loaded. Gets the\n   * visible waypoints on the map and waypoints that have already been found by the user.\n   */\n  const onTilesLoaded = React.useCallback(async function callback () {\n    const bounds = mapRef.current.getBounds()\n    await getWaypoints(bounds)\n    await getFoundWaypoints()\n  }, [])\n\n  /**\n   * Callback function to be called when the map is loaded at the beginning. Gets the visible\n   * waypoints on the map and waypoints that have already been found by the user. Creates a\n   * new map component and sets it as a reference.\n   */\n  const onLoad = React.useCallback(\n    async function callback (map) {\n      const bounds = new window.google.maps.LatLngBounds(position)\n      await getWaypoints(bounds)\n      await getFoundWaypoints()\n\n      map.fitBounds(bounds)\n      mapRef.current = map\n      map.center = position\n    },\n    [position]\n  )\n\n  /**\n   * Callback function to be called when map is unmounted. Sets the hooks to the relevant null\n   * or empty state, including the map reference.\n   */\n  const onUnmount = React.useCallback(function callback () {\n    mapRef.current = null\n    setWayPoints([])\n    setCurrPositionClicked(false)\n    setActiveMarkerHash(null)\n  }, [])\n\n  /**\n   * Callback function to be called when the user found the geocache. Makes an API call to\n   * the backend to record the found cache waypoint. Makes an API call to gather the updated\n   * found waypoints by the user.\n   */\n  const onCacheFoundButtonClick = React.useCallback(async function callback (\n    waypoint\n  ) {\n    // Replace '/' as '@@' since '/' cannot be used in a REST api.\n    let waypointName = waypoint.name.replace('/', '@@')\n    await axios\n      .post(\n        `http://localhost:5000/geocacheFound/${waypoint.lat}/${waypoint.lng}/'${waypointName}'/${waypoint.hash}`\n      )\n      .then(response => {\n        console.log('SUCCESSPOST', response)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n    await getFoundWaypoints()\n  },\n  [])\n\n  /**\n   * Determines if the given hash for a waypoint exists in the waypoints that have been found\n   * by the user.\n   */\n  function isFoundMarker (hash) {\n    let foundCacheHash = []\n    foundWaypoints.map(waypoint => foundCacheHash.push(waypoint.hash))\n    return foundCacheHash.includes(hash)\n  }\n\n  /**\n   * Clickable icon for the user's current position.\n   */\n  const currPositionIcon = {\n    path:\n      'M-1.547 12l6.563-6.609-1.406-1.406-5.156 5.203-2.063-2.109-1.406 1.406zM0 0q2.906 0 ' +\n      '4.945 2.039t2.039 4.945q0 1.453-0.727 3.328t-1.758 3.516-2.039 3.070-1.711 2.273l-0.75 ' +\n      '0.797q-0.281-0.328-0.75-0.867t-1.688-2.156-2.133-3.141-1.664-3.445-0.75-3.375q0-2.906 ' +\n      '2.039-4.945t4.945-2.039z',\n    fillColor: 'green',\n    fillOpacity: 1,\n    strokeWeight: 0,\n    rotation: 0,\n    scale: 2\n  }\n\n  /**\n   * Clickable icon for waypoints that have been found by the user.\n   */\n  let foundWaypointIcon = {\n    url: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png',\n    fillColor: 'red',\n    fillOpacity: 1,\n    strokeWeight: 0,\n    rotation: 0,\n    scale: 1.8\n  }\n\n  return isLoaded ? (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      zoom={4}\n      onLoad={onLoad}\n      onUnmount={onUnmount}\n      onTilesLoaded={onTilesLoaded}\n    >\n      {waypoints.map(waypoint => {\n        return (\n          <Marker\n            key={waypoint.hash}\n            position={{ lat: waypoint.lat, lng: waypoint.lng }}\n            clickable={true}\n            onClick={() => setActiveMarkerHash(waypoint.hash)}\n            icon={isFoundMarker(waypoint.hash) ? foundWaypointIcon : null}\n          >\n            {activeMarkerHash && activeMarkerHash === waypoint.hash ? (\n              <InfoWindow onCloseClick={() => setActiveMarkerHash(null)}>\n                <div id='markerInfo'>\n                  <div id='markerName'>{waypoint.name}</div>\n                  <div>Latitude: {waypoint.lat}</div>\n                  <div>Longitude: {waypoint.lng}</div>\n                  <Button\n                    id='markerButton'\n                    variant='outlined'\n                    onClick={() => onCacheFoundButtonClick(waypoint)}\n                    disabled={isFoundMarker(waypoint.hash)}\n                  >\n                    Cache found!\n                  </Button>\n                </div>\n              </InfoWindow>\n            ) : null}\n          </Marker>\n        )\n      })}\n      {\n        <Marker\n          key='current_location'\n          position={position}\n          clickable={true}\n          icon={currPositionIcon}\n          onClick={() => setCurrPositionClicked(true)}\n        >\n          {currPositionClicked && (\n            <InfoWindow onCloseClick={() => setCurrPositionClicked(false)}>\n              <div id='markerInfo'>\n                <span>Current Location!</span>\n                <div>Latitude: {position.lat}</div>\n                <div>Longitude: {position.lng}</div>\n              </div>\n            </InfoWindow>\n          )}\n        </Marker>\n      }\n    </GoogleMap>\n  ) : (\n    <></>\n  )\n}\n\nexport default React.memo(MapComponent)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}