{"ast":null,"code":"var _jsxFileName = \"/Users/kiminlee2000225/Documents/Code/geocache_frontend/src/GoogleMaps.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\nfunction MyComponent() {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyCuqNmuK8YHJn06WZwIkzZd2J8_XTJxpxM\"\n  });\n  const navigatorObj = navigator.geolocation;\n  console.log('navob', navigatorObj);\n  const [map, setMap] = React.useState(null);\n  const onLoad = React.useCallback(function callback(map) {\n    // This is just an example of getting and using the map instance!!! don't just blindly copy!\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(MyComponent, \"sc/DS85Udqb0HC94DVNruSImuio=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = MyComponent;\nexport default _c2 = /*#__PURE__*/React.memo(MyComponent);\nvar _c, _c2;\n$RefreshReg$(_c, \"MyComponent\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","GoogleMap","useJsApiLoader","Fragment","_Fragment","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","MyComponent","_s","isLoaded","id","googleMapsApiKey","navigatorObj","navigator","geolocation","console","log","map","setMap","useState","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","mapContainerStyle","zoom","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","memo","$RefreshReg$"],"sources":["/Users/kiminlee2000225/Documents/Code/geocache_frontend/src/GoogleMaps.js"],"sourcesContent":["import React from 'react'\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\n\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\n\nfunction MyComponent() {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyCuqNmuK8YHJn06WZwIkzZd2J8_XTJxpxM\"\n  })\n  \n  const navigatorObj = navigator.geolocation;\n\n  console.log('navob',navigatorObj);\n\n  const [map, setMap] = React.useState(null)\n\n  const onLoad = React.useCallback(function callback(map) {\n    // This is just an example of getting and using the map instance!!! don't just blindly copy!\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n\n    setMap(map)\n  }, [])\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null)\n  }, [])\n\n  return isLoaded ? (\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={10}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n      >\n        { /* Child components, such as markers, info windows, etc. */ }\n        <></>\n      </GoogleMap>\n  ) : <></>\n}\n\nexport default React.memo(MyComponent)"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,CAAC,KAAK;EACXC,GAAG,EAAE,CAAC;AACR,CAAC;AAED,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAS,CAAC,GAAGb,cAAc,CAAC;IAClCc,EAAE,EAAE,mBAAmB;IACvBC,gBAAgB,EAAE;EACpB,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAGC,SAAS,CAACC,WAAW;EAE1CC,OAAO,CAACC,GAAG,CAAC,OAAO,EAACJ,YAAY,CAAC;EAEjC,MAAM,CAACK,GAAG,EAAEC,MAAM,CAAC,GAAGxB,KAAK,CAACyB,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMC,MAAM,GAAG1B,KAAK,CAAC2B,WAAW,CAAC,SAASC,QAAQA,CAACL,GAAG,EAAE;IACtD;IACA,MAAMM,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,YAAY,CAACvB,MAAM,CAAC;IAC1Da,GAAG,CAACW,SAAS,CAACL,MAAM,CAAC;IAErBL,MAAM,CAACD,GAAG,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,SAAS,GAAGnC,KAAK,CAAC2B,WAAW,CAAC,SAASC,QAAQA,CAACL,GAAG,EAAE;IACzDC,MAAM,CAAC,IAAI,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOT,QAAQ,gBACXT,OAAA,CAACL,SAAS;IACRmC,iBAAiB,EAAE7B,cAAe;IAClCG,MAAM,EAAEA,MAAO;IACf2B,IAAI,EAAE,EAAG;IACTX,MAAM,EAAEA,MAAO;IACfS,SAAS,EAAEA,SAAU;IAAAG,QAAA,eAGrBhC,OAAA,CAAAF,SAAA,mBAAI;EAAC;IAAAmC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC,gBACZpC,OAAA,CAAAF,SAAA,mBAAI,CAAC;AACX;AAACU,EAAA,CApCQD,WAAW;EAAA,QACGX,cAAc;AAAA;AAAAyC,EAAA,GAD5B9B,WAAW;AAsCpB,eAAA+B,GAAA,gBAAe5C,KAAK,CAAC6C,IAAI,CAAChC,WAAW,CAAC;AAAA,IAAA8B,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}