{"ast":null,"code":"var _jsxFileName = \"/Users/kiminlee2000225/Documents/Code/geocache_frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport GoogleMaps from './GoogleMaps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [getMessage, setGetMessage] = useState({});\n  useEffect(() => {\n    // let boundaries = {northEast: , southWest: , count: }\n    // axios.post('http://localhost:5000/geocache', )\n\n    axios.get('http://localhost:5000/geocache').then(response => {\n      console.log(\"SUCCESSGET\", response);\n      setGetMessage(response);\n    }).catch(error => {\n      console.log(error);\n    });\n    console.log(getMessage);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(GoogleMaps, {\n      waypoints: getMessage.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"React + Flask Tutorial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: getMessage.status === 200 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"it loaded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"LOADING\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hTcwbwXFjv378cDUiUEfqm9NE3I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useEffect","useState","axios","GoogleMaps","jsxDEV","_jsxDEV","App","_s","getMessage","setGetMessage","get","then","response","console","log","catch","error","className","children","waypoints","data","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","status","_c","$RefreshReg$"],"sources":["/Users/kiminlee2000225/Documents/Code/geocache_frontend/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios'\n\nimport GoogleMaps from './GoogleMaps';\n\nfunction App() {\n  const [getMessage, setGetMessage] = useState({})\n\n  useEffect(() => {\n    // let boundaries = {northEast: , southWest: , count: }\n    // axios.post('http://localhost:5000/geocache', )\n\n\n    axios.get('http://localhost:5000/geocache').then(response => {\n      console.log(\"SUCCESSGET\", response)\n      setGetMessage(response)\n    }).catch(error => {\n      console.log(error)\n    })\n    console.log(getMessage);\n\n  }, [])\n  return (\n    <div className=\"App\">\n      <GoogleMaps waypoints={getMessage.data}></GoogleMaps>\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>React + Flask Tutorial</p>\n        <div>{getMessage.status === 200 ?\n          <h3>it loaded</h3>\n          :\n          <h3>LOADING</h3>}</div>\n      </header>\n    </div>\n  );\n}\n\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd;IACA;;IAGAE,KAAK,CAACQ,GAAG,CAAC,gCAAgC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;MAC3DC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,QAAQ,CAAC;MACnCH,aAAa,CAACG,QAAQ,CAAC;IACzB,CAAC,CAAC,CAACG,KAAK,CAACC,KAAK,IAAI;MAChBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB,CAAC,CAAC;IACFH,OAAO,CAACC,GAAG,CAACN,UAAU,CAAC;EAEzB,CAAC,EAAE,EAAE,CAAC;EACN,oBACEH,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA,CAACF,UAAU;MAACgB,SAAS,EAAEX,UAAU,CAACY;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eACrDnB,OAAA;MAAQY,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5Bb,OAAA;QAAKoB,GAAG,EAAE3B,IAAK;QAACmB,SAAS,EAAC,UAAU;QAACS,GAAG,EAAC;MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClDnB,OAAA;QAAAa,QAAA,EAAG;MAAsB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7BnB,OAAA;QAAAa,QAAA,EAAMV,UAAU,CAACmB,MAAM,KAAK,GAAG,gBAC7BtB,OAAA;UAAAa,QAAA,EAAI;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,gBAElBnB,OAAA;UAAAa,QAAA,EAAI;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACjB,EAAA,CA9BQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}