{"ast":null,"code":"var _jsxFileName = \"/Users/kiminlee2000225/Documents/Code/geocache_frontend/src/GoogleMaps.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\nfunction MapComponent(_ref) {\n  _s();\n  let {\n    waypoints\n  } = _ref;\n  console.log('kimchi2');\n  console.log(waypoints);\n  const [position, setPosition] = useState({\n    lat: -3.745,\n    lng: -38.523\n  });\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyCuqNmuK8YHJn06WZwIkzZd2J8_XTJxpxM\"\n  });\n  const [map, setMap] = React.useState(null);\n  const [getAllPositions, setAllPositions] = useState();\n\n  // useEffect(() => {\n  //     const bounds = new window.google.maps.LatLngBounds(position);\n  //     console.log('kimchi')\n\n  //     let boundaries = {\n  //         northEastLat: bounds.getNorthEast().lat(),\n  //         northEastLng: bounds.getNorthEast().lng(),\n  //         southWestLat: bounds.getSouthWest().lat(),\n  //         southWestLng: bounds.getSouthWest().lng()\n  //     }\n  //     console.log('kimchi 4' + boundaries.northEastLng);\n  //     axios.post('http://localhost:5000/geocache', boundaries).then(response => {\n  //         console.log(\"SUCCESS\", response)\n  //         setAllPositions(response)\n  //     }).catch(error => {\n  //         console.log(error)\n  //     })\n\n  //     map.fitBounds(bounds);\n\n  //     setMap(map)\n  // }, [map])\n\n  const onChange = React.useCallback(function callback(map) {\n    // This is just an example of getting and using the map instance!!! don't just blindly copy!\n    navigator.geolocation.getCurrentPosition(position => {\n      setPosition({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      });\n      // doSomething(position.coords.latitude, position.coords.longitude);\n      // this should be backend call\n    });\n\n    const bounds = new window.google.maps.LatLngBounds(position);\n    let boundaries = {\n      northEastLat: bounds.getNorthEast().lat(),\n      northEastLng: bounds.getNorthEast().lng(),\n      southWestLat: bounds.getSouthWest().lat(),\n      southWestLng: bounds.getSouthWest().lng()\n    };\n    console.log('kimchi 5' + boundaries.northEastLng);\n    axios.post('http://localhost:5000/geocache', boundaries).then(response => {\n      console.log(\"SUCCESS\", response);\n      setAllPositions(response);\n    }).catch(error => {\n      console.log(error);\n    });\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onLoad = React.useCallback(function callback(map) {\n    // This is just an example of getting and using the map instance!!! don't just blindly copy!\n    navigator.geolocation.getCurrentPosition(position => {\n      setPosition({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      });\n      // doSomething(position.coords.latitude, position.coords.longitude);\n      // this should be backend call\n    });\n\n    const bounds = new window.google.maps.LatLngBounds(position);\n    console.log('kimchi');\n    let boundaries = {\n      northEastLat: bounds.getNorthEast().lat(),\n      northEastLng: bounds.getNorthEast().lng(),\n      southWestLat: bounds.getSouthWest().lat(),\n      southWestLng: bounds.getSouthWest().lng()\n    };\n    console.log('kimchi 4' + boundaries.northEastLng);\n    axios.post('http://localhost:5000/geocache', boundaries).then(response => {\n      console.log(\"SUCCESS\", response);\n      setAllPositions(response);\n    }).catch(error => {\n      console.log(error);\n    });\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: position,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    onBoundsChanged: onChange,\n    children: [/*#__PURE__*/_jsxDEV(Marker, {\n      position: position,\n      clickable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(MapComponent, \"pevEgaaqkhaygdA07dcMljMlFx4=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = MapComponent;\nexport default _c2 = /*#__PURE__*/React.memo(MapComponent);\nvar _c, _c2;\n$RefreshReg$(_c, \"MapComponent\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","useJsApiLoader","Marker","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","center","lat","lng","MapComponent","_ref","_s","waypoints","console","log","position","setPosition","isLoaded","id","googleMapsApiKey","map","setMap","getAllPositions","setAllPositions","onChange","useCallback","callback","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","bounds","window","google","maps","LatLngBounds","boundaries","northEastLat","getNorthEast","northEastLng","southWestLat","getSouthWest","southWestLng","post","then","response","catch","error","fitBounds","onLoad","onUnmount","mapContainerStyle","zoom","onBoundsChanged","children","clickable","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","memo","$RefreshReg$"],"sources":["/Users/kiminlee2000225/Documents/Code/geocache_frontend/src/GoogleMaps.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\nimport axios from 'axios'\n\nconst containerStyle = {\n    width: '400px',\n    height: '400px'\n};\n\nconst center = {\n    lat: -3.745,\n    lng: -38.523\n};\n\nfunction MapComponent({ waypoints }) {\n    console.log('kimchi2')\n    console.log(waypoints);\n    const [position, setPosition] = useState({\n        lat: -3.745,\n        lng: -38.523\n    })\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: \"AIzaSyCuqNmuK8YHJn06WZwIkzZd2J8_XTJxpxM\"\n    })\n\n    const [map, setMap] = React.useState(null)\n    const [getAllPositions, setAllPositions] = useState()\n\n    // useEffect(() => {\n    //     const bounds = new window.google.maps.LatLngBounds(position);\n    //     console.log('kimchi')\n\n    //     let boundaries = {\n    //         northEastLat: bounds.getNorthEast().lat(),\n    //         northEastLng: bounds.getNorthEast().lng(),\n    //         southWestLat: bounds.getSouthWest().lat(),\n    //         southWestLng: bounds.getSouthWest().lng()\n    //     }\n    //     console.log('kimchi 4' + boundaries.northEastLng);\n    //     axios.post('http://localhost:5000/geocache', boundaries).then(response => {\n    //         console.log(\"SUCCESS\", response)\n    //         setAllPositions(response)\n    //     }).catch(error => {\n    //         console.log(error)\n    //     })\n\n\n    //     map.fitBounds(bounds);\n\n    //     setMap(map)\n    // }, [map])\n\n    const onChange = React.useCallback(function callback(map) {\n\n\n        // This is just an example of getting and using the map instance!!! don't just blindly copy!\n        navigator.geolocation.getCurrentPosition((position) => {\n            setPosition({ lat: position.coords.latitude, lng: position.coords.longitude });\n            // doSomething(position.coords.latitude, position.coords.longitude);\n            // this should be backend call\n        });\n        const bounds = new window.google.maps.LatLngBounds(position);\n\n        let boundaries = {\n            northEastLat: bounds.getNorthEast().lat(),\n            northEastLng: bounds.getNorthEast().lng(),\n            southWestLat: bounds.getSouthWest().lat(),\n            southWestLng: bounds.getSouthWest().lng()\n        }\n        console.log('kimchi 5' + boundaries.northEastLng);\n        axios.post('http://localhost:5000/geocache', boundaries).then(response => {\n            console.log(\"SUCCESS\", response)\n            setAllPositions(response)\n        }).catch(error => {\n            console.log(error)\n        })\n\n\n        map.fitBounds(bounds);\n\n        setMap(map)\n    }, [])\n\n    const onLoad = React.useCallback(function callback(map) {\n\n\n        // This is just an example of getting and using the map instance!!! don't just blindly copy!\n        navigator.geolocation.getCurrentPosition((position) => {\n            setPosition({ lat: position.coords.latitude, lng: position.coords.longitude });\n            // doSomething(position.coords.latitude, position.coords.longitude);\n            // this should be backend call\n        });\n        const bounds = new window.google.maps.LatLngBounds(position);\n        console.log('kimchi')\n\n        let boundaries = {\n            northEastLat: bounds.getNorthEast().lat(),\n            northEastLng: bounds.getNorthEast().lng(),\n            southWestLat: bounds.getSouthWest().lat(),\n            southWestLng: bounds.getSouthWest().lng()\n        }\n        console.log('kimchi 4' + boundaries.northEastLng);\n        axios.post('http://localhost:5000/geocache', boundaries).then(response => {\n            console.log(\"SUCCESS\", response)\n            setAllPositions(response)\n        }).catch(error => {\n            console.log(error)\n        })\n\n\n        map.fitBounds(bounds);\n\n        setMap(map)\n    }, [])\n\n    const onUnmount = React.useCallback(function callback(map) {\n        setMap(null)\n    }, [])\n\n    return isLoaded ? (\n        <GoogleMap\n            mapContainerStyle={containerStyle}\n            center={position}\n            zoom={10}\n            onLoad={onLoad}\n            onUnmount={onUnmount}\n            onBoundsChanged={onChange}\n        >\n            { /* Child components, such as markers, info windows, etc. */}\n            {<Marker position={position} clickable={true} />}\n            <></>\n        </GoogleMap>\n    ) : <></>\n}\n\nexport default React.memo(MapComponent)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}