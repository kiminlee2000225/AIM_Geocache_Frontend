{"ast":null,"code":"var _jsxFileName = \"/Users/kiminlee2000225/Documents/Code/geocache_frontend/src/GoogleMaps.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100vh'\n};\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\nfunction MapComponent() {\n  _s();\n  console.log('kimchi2');\n  const [position, setPosition] = useState({\n    lat: -3.745,\n    lng: -38.523\n  });\n  const [getMessage, setGetMessage] = useState({});\n  const [boundaries, setBoundaries] = useState({\n    northEastLat: null,\n    northEastLng: null,\n    southWestLat: null,\n    southWestLng: null\n  });\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyCuqNmuK8YHJn06WZwIkzZd2J8_XTJxpxM\"\n  });\n  const [map, setMap] = React.useState(null);\n  const mapRef = React.useRef(null);\n  const [getAllPositions, setAllPositions] = useState();\n  const onTilesLoaded = React.useCallback(async function callback(map) {\n    navigator.geolocation.getCurrentPosition(position => {\n      setPosition({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      });\n      // doSomething(position.coords.latitude, position.coords.longitude);\n      // this should be backend call\n    });\n\n    const bounds = new window.google.maps.LatLngBounds(position);\n    console.log('kimchi5');\n    console.log(mapRef);\n    let boundaries = {\n      northEastLat: bounds.getNorthEast().lat(),\n      northEastLng: bounds.getNorthEast().lng(),\n      southWestLat: bounds.getSouthWest().lat(),\n      southWestLng: bounds.getSouthWest().lng()\n    };\n    setBoundaries(boundaries);\n    console.log('kimchi 4' + boundaries.northEastLng);\n    // await axios.post('http://localhost:5000/geocache', boundaries).then(response => {\n    //     console.log(\"SUCCESS\", response)\n    //     setAllPositions(response)\n    // }).catch(error => {\n    //     console.log(error)\n    // })\n\n    await axios.get(`http://localhost:5000/geocache/${boundaries.northEastLat}/${boundaries.northEastLng}/${boundaries.southWestLat}/${boundaries.southWestLng}`).then(response => {\n      console.log(\"SUCCESSGET\", response);\n      setGetMessage(response);\n    }).catch(error => {\n      console.log(error);\n    });\n    console.log('kimin called');\n  });\n  const onLoad = React.useCallback(async function callback(map) {\n    // This is just an example of getting and using the map instance!!! don't just blindly copy!\n    navigator.geolocation.getCurrentPosition(position => {\n      setPosition({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      });\n      // doSomething(position.coords.latitude, position.coords.longitude);\n      // this should be backend call\n    });\n\n    const bounds = new window.google.maps.LatLngBounds(position);\n    console.log('kimchi');\n    let boundaries = {\n      northEastLat: bounds.getNorthEast().lat(),\n      northEastLng: bounds.getNorthEast().lng(),\n      southWestLat: bounds.getSouthWest().lat(),\n      southWestLng: bounds.getSouthWest().lng()\n    };\n    setBoundaries(boundaries);\n    console.log('kimchi 4' + boundaries.northEastLng);\n    // await axios.post('http://localhost:5000/geocache', boundaries).then(response => {\n    //     console.log(\"SUCCESS\", response)\n    //     setAllPositions(response)\n    // }).catch(error => {\n    //     console.log(error)\n    // })\n\n    await axios.get(`http://localhost:5000/geocache/${boundaries.northEastLat}/${boundaries.northEastLng}/${boundaries.southWestLat}/${boundaries.southWestLng}`).then(response => {\n      console.log(\"SUCCESSGET\", response);\n      setGetMessage(response);\n    }).catch(error => {\n      console.log(error);\n    });\n    console.log('successget ' + getMessage.data);\n    map.fitBounds(bounds);\n    mapRef.current = map;\n    console.log('kimin6');\n    console.log(map);\n    setMap(map);\n  }, [setMap]);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: position,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    onTilesLoaded: onTilesLoaded\n    // onBoundsChanged={onChange}\n    ,\n    children: /*#__PURE__*/_jsxDEV(Marker, {\n      position: position,\n      clickable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(MapComponent, \"HeE/xbtBIqdKR0j2NaERJpqdcYk=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = MapComponent;\nexport default _c2 = /*#__PURE__*/React.memo(MapComponent);\nvar _c, _c2;\n$RefreshReg$(_c, \"MapComponent\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","useJsApiLoader","Marker","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","center","lat","lng","MapComponent","_s","console","log","position","setPosition","getMessage","setGetMessage","boundaries","setBoundaries","northEastLat","northEastLng","southWestLat","southWestLng","isLoaded","id","googleMapsApiKey","map","setMap","mapRef","useRef","getAllPositions","setAllPositions","onTilesLoaded","useCallback","callback","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","bounds","window","google","maps","LatLngBounds","getNorthEast","getSouthWest","get","then","response","catch","error","onLoad","data","fitBounds","current","onUnmount","mapContainerStyle","zoom","children","clickable","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","memo","$RefreshReg$"],"sources":["/Users/kiminlee2000225/Documents/Code/geocache_frontend/src/GoogleMaps.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\nimport axios from 'axios'\n\nconst containerStyle = {\n    width: '100%',\n    height: '100vh',\n};\n\nconst center = {\n    lat: -3.745,\n    lng: -38.523\n};\n\nfunction MapComponent() {\n    console.log('kimchi2')\n    const [position, setPosition] = useState({\n        lat: -3.745,\n        lng: -38.523\n    })\n    const [getMessage, setGetMessage] = useState({})\n    const [boundaries, setBoundaries] = useState({\n        northEastLat: null,\n        northEastLng: null,\n        southWestLat: null,\n        southWestLng: null\n    })\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: \"AIzaSyCuqNmuK8YHJn06WZwIkzZd2J8_XTJxpxM\"\n    })\n\n    const [map, setMap] = React.useState(null)\n    const mapRef= React.useRef(null);\n    const [getAllPositions, setAllPositions] = useState()\n\n\n\n    const onTilesLoaded = React.useCallback(async function callback(map) {\n\n\n        navigator.geolocation.getCurrentPosition((position) => {\n            setPosition({ lat: position.coords.latitude, lng: position.coords.longitude });\n            // doSomething(position.coords.latitude, position.coords.longitude);\n            // this should be backend call\n        });\n\n        const bounds = new window.google.maps.LatLngBounds(position);\n        console.log('kimchi5')\n        console.log(mapRef)\n\n        let boundaries = {\n            northEastLat: bounds.getNorthEast().lat(),\n            northEastLng: bounds.getNorthEast().lng(),\n            southWestLat: bounds.getSouthWest().lat(),\n            southWestLng: bounds.getSouthWest().lng()\n        }\n        setBoundaries(boundaries);\n        console.log('kimchi 4' + boundaries.northEastLng);\n        // await axios.post('http://localhost:5000/geocache', boundaries).then(response => {\n        //     console.log(\"SUCCESS\", response)\n        //     setAllPositions(response)\n        // }).catch(error => {\n        //     console.log(error)\n        // })\n\n        await axios.get(`http://localhost:5000/geocache/${boundaries.northEastLat}/${boundaries.northEastLng}/${boundaries.southWestLat}/${boundaries.southWestLng}`).then(response => {\n            console.log(\"SUCCESSGET\", response)\n            setGetMessage(response)\n        }).catch(error => {\n            console.log(error)\n        })\n        console.log('kimin called')\n    })\n\n    const onLoad = React.useCallback(async function callback(map) {\n\n        // This is just an example of getting and using the map instance!!! don't just blindly copy!\n        navigator.geolocation.getCurrentPosition((position) => {\n            setPosition({ lat: position.coords.latitude, lng: position.coords.longitude });\n            // doSomething(position.coords.latitude, position.coords.longitude);\n            // this should be backend call\n        });\n        const bounds = new window.google.maps.LatLngBounds(position);\n        console.log('kimchi')\n\n        let boundaries = {\n            northEastLat: bounds.getNorthEast().lat(),\n            northEastLng: bounds.getNorthEast().lng(),\n            southWestLat: bounds.getSouthWest().lat(),\n            southWestLng: bounds.getSouthWest().lng()\n        }\n        setBoundaries(boundaries);\n        console.log('kimchi 4' + boundaries.northEastLng);\n        // await axios.post('http://localhost:5000/geocache', boundaries).then(response => {\n        //     console.log(\"SUCCESS\", response)\n        //     setAllPositions(response)\n        // }).catch(error => {\n        //     console.log(error)\n        // })\n\n        await axios.get(`http://localhost:5000/geocache/${boundaries.northEastLat}/${boundaries.northEastLng}/${boundaries.southWestLat}/${boundaries.southWestLng}`).then(response => {\n            console.log(\"SUCCESSGET\", response)\n            setGetMessage(response)\n        }).catch(error => {\n            console.log(error)\n        })\n        console.log('successget ' + getMessage.data);\n\n        map.fitBounds(bounds);\n\n        mapRef.current = map;\n        console.log('kimin6')\n        console.log(map)\n        setMap(map)\n    }, [setMap])\n\n    const onUnmount = React.useCallback(function callback(map) {\n        setMap(null)\n    }, [])\n\n    return isLoaded ? (\n        <GoogleMap\n            mapContainerStyle={containerStyle}\n            center={position}\n            zoom={10}\n            onLoad={onLoad}\n            onUnmount={onUnmount}\n            onTilesLoaded={onTilesLoaded}\n        // onBoundsChanged={onChange}\n        >\n            { /* Child components, such as markers, info windows, etc. */}\n            {/* {getMessage.map(waypoint => {\n                return <Marker key={waypoint.name} position={waypoint.position} clickable={true}/>;\n            })} */}\n            {<Marker position={position} clickable={true} />}\n        </GoogleMap>\n    ) : <></>\n}\n\nexport default React.memo(MapComponent)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}